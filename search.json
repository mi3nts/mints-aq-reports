[
  {
    "objectID": "test/data-download.html",
    "href": "test/data-download.html",
    "title": "Data Download",
    "section": "",
    "text": "This sample notebook demonstrates how to programatically download and visualize air quality data stored on the Open Storage Network\n\ndf_BME280 = CSV.File(download(\"https://ncsa.osn.xsede.org/ees230012-bucket01/AirQualityNetwork/data/raw/Central_Hub_1/2023/03/02/MINTS_001e06318c91_BME280_2023_03_02.csv\")) |&gt; DataFrame\n\n965×5 DataFrame940 rows omitted\n\n\n\nRow\ndateTime\ntemperature\npressure\nhumidity\naltitude\n\n\n\nString31\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n2023-03-02 21:17:50.113837\n24.88\n96918.0\n47.0\n373.48\n\n\n2\n2023-03-02 21:18:00.131724\n24.89\n96913.0\n47.0\n373.91\n\n\n3\n2023-03-02 21:18:10.164866\n24.88\n96911.0\n47.0\n374.09\n\n\n4\n2023-03-02 21:18:20.181817\n24.87\n96914.0\n47.0\n373.83\n\n\n5\n2023-03-02 21:18:30.213784\n24.88\n96911.0\n47.0\n374.09\n\n\n6\n2023-03-02 21:18:40.229651\n24.87\n96914.0\n47.0\n373.83\n\n\n7\n2023-03-02 21:18:50.260480\n24.88\n96916.0\n47.0\n373.66\n\n\n8\n2023-03-02 21:19:00.276342\n24.88\n96910.0\n47.0\n374.17\n\n\n9\n2023-03-02 21:19:10.307070\n24.88\n96901.0\n47.0\n374.95\n\n\n10\n2023-03-02 21:19:20.322728\n24.88\n96901.0\n47.0\n374.95\n\n\n11\n2023-03-02 21:19:30.338601\n24.88\n96902.0\n47.0\n374.87\n\n\n12\n2023-03-02 21:19:40.369151\n24.88\n96903.0\n47.0\n374.78\n\n\n13\n2023-03-02 21:19:50.384637\n24.89\n96893.0\n47.0\n375.64\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n954\n2023-03-02 23:58:07.902762\n27.38\n96629.0\n43.0\n398.45\n\n\n955\n2023-03-02 23:58:17.919015\n27.38\n96621.0\n43.0\n399.15\n\n\n956\n2023-03-02 23:58:27.950124\n27.38\n96621.0\n43.0\n399.15\n\n\n957\n2023-03-02 23:58:37.981368\n27.38\n96627.0\n43.0\n398.63\n\n\n958\n2023-03-02 23:58:47.997385\n27.37\n96620.0\n43.0\n399.23\n\n\n959\n2023-03-02 23:58:58.028589\n27.36\n96624.0\n43.0\n398.88\n\n\n960\n2023-03-02 23:59:08.044753\n27.36\n96631.0\n43.0\n398.28\n\n\n961\n2023-03-02 23:59:18.075909\n27.36\n96619.0\n43.0\n399.32\n\n\n962\n2023-03-02 23:59:28.092216\n27.36\n96616.0\n43.0\n399.58\n\n\n963\n2023-03-02 23:59:38.123351\n27.37\n96610.0\n43.0\n400.1\n\n\n964\n2023-03-02 23:59:48.139750\n27.37\n96613.0\n43.0\n399.84\n\n\n965\n2023-03-02 23:59:58.170898\n27.35\n96622.0\n43.0\n399.06\n\n\n\n\n\n\n\ndf_IPS7100 = CSV.File(download(\"https://ncsa.osn.xsede.org/ees230012-bucket01/AirQualityNetwork/data/raw/Central_Hub_1/2023/03/02/MINTS_001e06318c91_IPS7100_2023_03_02.csv\")) |&gt; DataFrame\n\n9715×15 DataFrame9690 rows omitted\n\n\n\nRow\ndateTime\npc0_1\npc0_3\npc0_5\npc1_0\npc2_5\npc5_0\npc10_0\npm0_1\npm0_3\npm0_5\npm1_0\npm2_5\npm5_0\npm10_0\n\n\n\nString31\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n2023-03-02 21:18:03.686980\n186348\n101116\n61137\n6795\n1036\n10\n0\n0.155705\n2.4369\n8.82213\n14.4999\n28.0323\n29.1087\n29.1087\n\n\n2\n2023-03-02 21:18:04.756650\n185877\n100817\n60893\n6789\n1036\n10\n0\n0.155312\n2.42976\n8.78947\n14.4623\n28.0025\n29.149\n29.149\n\n\n3\n2023-03-02 21:18:05.682043\n185455\n100555\n60617\n6783\n1040\n16\n0\n0.154959\n2.4235\n8.75437\n14.4225\n28.0176\n29.7319\n29.7319\n\n\n4\n2023-03-02 21:18:06.679952\n185011\n100310\n60232\n6760\n1041\n17\n0\n0.154589\n2.4176\n8.70829\n14.357\n27.959\n29.8246\n29.8246\n\n\n5\n2023-03-02 21:18:07.677839\n184486\n99999\n59783\n6724\n1042\n17\n0\n0.154149\n2.41013\n8.65389\n14.2727\n27.8843\n29.7314\n29.7314\n\n\n6\n2023-03-02 21:18:08.674922\n184024\n99727\n59374\n6693\n1041\n18\n0\n0.153763\n2.40361\n8.60465\n14.1975\n27.7991\n29.7457\n29.7457\n\n\n7\n2023-03-02 21:18:09.672863\n183592\n99472\n58951\n6660\n1038\n19\n0\n0.153403\n2.39749\n8.55434\n14.1197\n27.6844\n29.7084\n29.7084\n\n\n8\n2023-03-02 21:18:10.670898\n183114\n99167\n58509\n6623\n1035\n16\n0\n0.153003\n2.39022\n8.50093\n14.0356\n27.5565\n29.3077\n29.3077\n\n\n9\n2023-03-02 21:18:11.667976\n182595\n98817\n58055\n6587\n1032\n10\n0\n0.152569\n2.3819\n8.44521\n13.9493\n27.4383\n28.5185\n28.5185\n\n\n10\n2023-03-02 21:18:12.666070\n182069\n98491\n57559\n6542\n1028\n7\n0\n0.15213\n2.37411\n8.38565\n13.8521\n27.2784\n28.071\n28.071\n\n\n11\n2023-03-02 21:18:13.663993\n181435\n98084\n56997\n6480\n1013\n5\n0\n0.1516\n2.36438\n8.31723\n13.7318\n26.9703\n27.5012\n27.5012\n\n\n12\n2023-03-02 21:18:14.661008\n180749\n97619\n56413\n6414\n995\n2\n0\n0.151027\n2.35333\n8.24519\n13.6052\n26.6081\n26.8255\n26.8255\n\n\n13\n2023-03-02 21:18:15.658345\n180081\n97165\n55831\n6350\n973\n0\n0\n0.150469\n2.34253\n8.17358\n13.4801\n26.198\n26.2421\n26.2421\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n9704\n2023-03-02 23:59:48.539369\n121501\n59068\n11955\n2241\n270\n0\n0\n0.101522\n1.43411\n2.68273\n4.55575\n8.08815\n8.08815\n8.08815\n\n\n9705\n2023-03-02 23:59:49.537345\n121060\n58771\n11910\n2222\n264\n0\n0\n0.101154\n1.42705\n2.67102\n4.52807\n7.9793\n7.9793\n7.9793\n\n\n9706\n2023-03-02 23:59:50.535837\n120637\n58478\n11872\n2205\n258\n0\n0\n0.1008\n1.42007\n2.66001\n4.50269\n7.88151\n7.88151\n7.88151\n\n\n9707\n2023-03-02 23:59:51.534259\n120133\n58104\n11802\n2183\n252\n0\n0\n0.100379\n1.41122\n2.64386\n4.46834\n7.76922\n7.76922\n7.76922\n\n\n9708\n2023-03-02 23:59:52.532713\n119602\n57736\n11719\n2158\n246\n0\n0\n0.0999347\n1.40247\n2.62647\n4.43038\n7.64456\n7.64456\n7.64456\n\n\n9709\n2023-03-02 23:59:53.530269\n119180\n57461\n11664\n2140\n240\n0\n0\n0.0995824\n1.39592\n2.61415\n4.4026\n7.54067\n7.54067\n7.54067\n\n\n9710\n2023-03-02 23:59:54.528673\n118754\n57177\n11616\n2121\n234\n0\n0\n0.0992267\n1.38914\n2.60234\n4.37504\n7.43885\n7.43885\n7.43885\n\n\n9711\n2023-03-02 23:59:55.526219\n118367\n56925\n11570\n2102\n229\n0\n0\n0.0989031\n1.38314\n2.59152\n4.34813\n7.3423\n7.3423\n7.3423\n\n\n9712\n2023-03-02 23:59:56.524240\n118005\n56683\n11505\n2081\n224\n0\n0\n0.0986006\n1.37738\n2.57906\n4.31805\n7.24628\n7.24628\n7.24628\n\n\n9713\n2023-03-02 23:59:57.522713\n117585\n56398\n11414\n2056\n218\n0\n0\n0.0982495\n1.37061\n2.56273\n4.28131\n7.13573\n7.13573\n7.13573\n\n\n9714\n2023-03-02 23:59:58.520251\n117207\n56148\n11337\n2039\n213\n0\n0\n0.097934\n1.36463\n2.54869\n4.25284\n7.03624\n7.03624\n7.03624\n\n\n9715\n2023-03-02 23:59:59.518143\n116909\n55961\n11277\n2027\n208\n0\n0\n0.0976852\n1.36018\n2.53798\n4.2321\n6.95184\n6.95184\n6.95184\n\n\n\n\n\n\n\n\nThis is a sample markdown string\n\\[\\begin{equation}     \\int_a^b f(x)dx  \\end{equation}\\]\nWe can do equations!\nFurther, we can impute values. For example, the maximum PM 2.5 concentration for 5-2-2023 was 33.20207035 μg/m³\nLet’s create a simple plot:\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThat plot looks great! Let’s now demonstrate the use of notebook parameters with papermill. In the first cell we define the variable test_parameter to the value 3.14. At execution time, the value is now 42"
  },
  {
    "objectID": "test/data-download__2.html",
    "href": "test/data-download__2.html",
    "title": "Data Download 2",
    "section": "",
    "text": "This sample notebook demonstrates how to programatically download and visualize air quality data stored on the Open Storage Network. In this second version, we demonstrate the use of the AWS.jl and AWSS3.jl client libraries\n\nusing CSV, DataFrames \nusing Plots\nusing Markdown\nusing AWS, AWSS3\ninclude(\"./osn_anonymous.jl\")\n\nNow that we have the requisite packages loaded, let’s set up our AWS configuration information using our custom AnonymousOSN configuration function.\nWe now can use AWSS3.jl to explore the files stored on OSN for central node 8.\n\np = S3Path(joinpath(bucket, \"AirQualityNetwork/data/raw/Central_Hub_1/2023/03/02/\"))\n\ndf_paths = []\n\nfor (root,dirs,files) ∈ walkdir(p)\n    for f ∈ files\n        push!(df_paths, joinpath(root, f))\n    end\nend\n\ndf_paths\n\n15-element Vector{Any}:\n \"s3://ees230012-bucket01/AirQual\" ⋯ 56 bytes ⋯ \"6318c91_APDS9002_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 54 bytes ⋯ \"e06318c91_BME280_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 54 bytes ⋯ \"e06318c91_BME680_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 53 bytes ⋯ \"1e06318c91_GL001_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 54 bytes ⋯ \"e06318c91_GUV001_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 54 bytes ⋯ \"e06318c91_HM3301_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 55 bytes ⋯ \"06318c91_IPS7100_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 50 bytes ⋯ \"_001e06318c91_IP_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 54 bytes ⋯ \"e06318c91_LIBRAD_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 53 bytes ⋯ \"1e06318c91_SCD30_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 54 bytes ⋯ \"e06318c91_TB108L_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 55 bytes ⋯ \"06318c91_TMG3993_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 55 bytes ⋯ \"06318c91_TSL2591_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 56 bytes ⋯ \"6318c91_VEML6075_2023_03_02.csv\"\n \"s3://ees230012-bucket01/AirQual\" ⋯ 59 bytes ⋯ \"ff2037bc_Summary_2023_03_02.csv\"\n\n\nWe can now load the files directly into dataframes for continued analysis.\n\ndf = CSV.File(S3Path(df_paths[7])) |&gt; DataFrame\n\n9715×15 DataFrame9690 rows omitted\n\n\n\nRow\ndateTime\npc0_1\npc0_3\npc0_5\npc1_0\npc2_5\npc5_0\npc10_0\npm0_1\npm0_3\npm0_5\npm1_0\npm2_5\npm5_0\npm10_0\n\n\n\nString31\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n2023-03-02 21:18:03.686980\n186348\n101116\n61137\n6795\n1036\n10\n0\n0.155705\n2.4369\n8.82213\n14.4999\n28.0323\n29.1087\n29.1087\n\n\n2\n2023-03-02 21:18:04.756650\n185877\n100817\n60893\n6789\n1036\n10\n0\n0.155312\n2.42976\n8.78947\n14.4623\n28.0025\n29.149\n29.149\n\n\n3\n2023-03-02 21:18:05.682043\n185455\n100555\n60617\n6783\n1040\n16\n0\n0.154959\n2.4235\n8.75437\n14.4225\n28.0176\n29.7319\n29.7319\n\n\n4\n2023-03-02 21:18:06.679952\n185011\n100310\n60232\n6760\n1041\n17\n0\n0.154589\n2.4176\n8.70829\n14.357\n27.959\n29.8246\n29.8246\n\n\n5\n2023-03-02 21:18:07.677839\n184486\n99999\n59783\n6724\n1042\n17\n0\n0.154149\n2.41013\n8.65389\n14.2727\n27.8843\n29.7314\n29.7314\n\n\n6\n2023-03-02 21:18:08.674922\n184024\n99727\n59374\n6693\n1041\n18\n0\n0.153763\n2.40361\n8.60465\n14.1975\n27.7991\n29.7457\n29.7457\n\n\n7\n2023-03-02 21:18:09.672863\n183592\n99472\n58951\n6660\n1038\n19\n0\n0.153403\n2.39749\n8.55434\n14.1197\n27.6844\n29.7084\n29.7084\n\n\n8\n2023-03-02 21:18:10.670898\n183114\n99167\n58509\n6623\n1035\n16\n0\n0.153003\n2.39022\n8.50093\n14.0356\n27.5565\n29.3077\n29.3077\n\n\n9\n2023-03-02 21:18:11.667976\n182595\n98817\n58055\n6587\n1032\n10\n0\n0.152569\n2.3819\n8.44521\n13.9493\n27.4383\n28.5185\n28.5185\n\n\n10\n2023-03-02 21:18:12.666070\n182069\n98491\n57559\n6542\n1028\n7\n0\n0.15213\n2.37411\n8.38565\n13.8521\n27.2784\n28.071\n28.071\n\n\n11\n2023-03-02 21:18:13.663993\n181435\n98084\n56997\n6480\n1013\n5\n0\n0.1516\n2.36438\n8.31723\n13.7318\n26.9703\n27.5012\n27.5012\n\n\n12\n2023-03-02 21:18:14.661008\n180749\n97619\n56413\n6414\n995\n2\n0\n0.151027\n2.35333\n8.24519\n13.6052\n26.6081\n26.8255\n26.8255\n\n\n13\n2023-03-02 21:18:15.658345\n180081\n97165\n55831\n6350\n973\n0\n0\n0.150469\n2.34253\n8.17358\n13.4801\n26.198\n26.2421\n26.2421\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n9704\n2023-03-02 23:59:48.539369\n121501\n59068\n11955\n2241\n270\n0\n0\n0.101522\n1.43411\n2.68273\n4.55575\n8.08815\n8.08815\n8.08815\n\n\n9705\n2023-03-02 23:59:49.537345\n121060\n58771\n11910\n2222\n264\n0\n0\n0.101154\n1.42705\n2.67102\n4.52807\n7.9793\n7.9793\n7.9793\n\n\n9706\n2023-03-02 23:59:50.535837\n120637\n58478\n11872\n2205\n258\n0\n0\n0.1008\n1.42007\n2.66001\n4.50269\n7.88151\n7.88151\n7.88151\n\n\n9707\n2023-03-02 23:59:51.534259\n120133\n58104\n11802\n2183\n252\n0\n0\n0.100379\n1.41122\n2.64386\n4.46834\n7.76922\n7.76922\n7.76922\n\n\n9708\n2023-03-02 23:59:52.532713\n119602\n57736\n11719\n2158\n246\n0\n0\n0.0999347\n1.40247\n2.62647\n4.43038\n7.64456\n7.64456\n7.64456\n\n\n9709\n2023-03-02 23:59:53.530269\n119180\n57461\n11664\n2140\n240\n0\n0\n0.0995824\n1.39592\n2.61415\n4.4026\n7.54067\n7.54067\n7.54067\n\n\n9710\n2023-03-02 23:59:54.528673\n118754\n57177\n11616\n2121\n234\n0\n0\n0.0992267\n1.38914\n2.60234\n4.37504\n7.43885\n7.43885\n7.43885\n\n\n9711\n2023-03-02 23:59:55.526219\n118367\n56925\n11570\n2102\n229\n0\n0\n0.0989031\n1.38314\n2.59152\n4.34813\n7.3423\n7.3423\n7.3423\n\n\n9712\n2023-03-02 23:59:56.524240\n118005\n56683\n11505\n2081\n224\n0\n0\n0.0986006\n1.37738\n2.57906\n4.31805\n7.24628\n7.24628\n7.24628\n\n\n9713\n2023-03-02 23:59:57.522713\n117585\n56398\n11414\n2056\n218\n0\n0\n0.0982495\n1.37061\n2.56273\n4.28131\n7.13573\n7.13573\n7.13573\n\n\n9714\n2023-03-02 23:59:58.520251\n117207\n56148\n11337\n2039\n213\n0\n0\n0.097934\n1.36463\n2.54869\n4.25284\n7.03624\n7.03624\n7.03624\n\n\n9715\n2023-03-02 23:59:59.518143\n116909\n55961\n11277\n2027\n208\n0\n0\n0.0976852\n1.36018\n2.53798\n4.2321\n6.95184\n6.95184\n6.95184\n\n\n\n\n\n\nNow that we have the data loaded we can visualize it:\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThat plot looks great! Let’s now demonstrate the use of notebook parameters with papermill. In the first cell we define the variable test_parameter to the value 3.14. At execution time, the value is now 1.21"
  },
  {
    "objectID": "central_nodes.html",
    "href": "central_nodes.html",
    "title": "Central Nodes",
    "section": "",
    "text": "Lorem Ipsum"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MINTS Air Network Analyses",
    "section": "",
    "text": "Test text"
  },
  {
    "objectID": "test/pm_data.html",
    "href": "test/pm_data.html",
    "title": "PM Data",
    "section": "",
    "text": "This notebook is a first pass on pulling and visualizing PM data stored on the Open Storage Network\n\n# read bme data from url for may 2nd\nbme_url = \"https://ncsa.osn.xsede.org/ees230012-bucket01/central-node-8/2023/2023/05/02/MINTS_001e06323a37_BME280_2023_05_02.csv\"\nbme_df = loadData(bme_url)\nbme_df.head()\n\n\n\n\n\n\n\n\ndateTime\ntemperature\npressure\nhumidity\naltitude\n\n\n\n\n0\n2023-05-02 00:00:01.768982\n23.12\n99579.0\n31.0\n146.37\n\n\n1\n2023-05-02 00:00:11.784763\n23.14\n99573.0\n31.0\n146.87\n\n\n2\n2023-05-02 00:00:21.815439\n23.12\n99577.0\n31.0\n146.54\n\n\n3\n2023-05-02 00:00:31.846306\n23.12\n99572.0\n30.0\n146.96\n\n\n4\n2023-05-02 00:00:41.861709\n23.12\n99570.0\n30.0\n147.13\n\n\n\n\n\n\n\n\nips_url = \"https://ncsa.osn.xsede.org/ees230012-bucket01/central-node-8/2023/2023/05/02/MINTS_001e06323a37_IPS7100_2023_05_02.csv\"\nips_df = loadData(ips_url)\nips_df.head()\n\n\n\n\n\n\n\n\ndateTime\npc0_1\npc0_3\npc0_5\npc1_0\npc2_5\npc5_0\npc10_0\npm0_1\npm0_3\npm0_5\npm1_0\npm2_5\npm5_0\npm10_0\n\n\n\n\n0\n2023-05-02 00:00:00.153699\n11512\n5101\n1093\n93\n16\n0\n0\n0.009619\n0.124717\n0.238913\n0.316666\n0.443954\n0.443954\n0.443954\n\n\n1\n2023-05-02 00:00:01.154625\n11426\n4975\n1096\n94\n22\n0\n0\n0.009547\n0.121789\n0.236346\n0.315338\n0.490778\n0.490778\n0.490778\n\n\n2\n2023-05-02 00:00:02.155689\n11382\n4851\n1092\n95\n28\n0\n0\n0.009511\n0.118964\n0.233116\n0.312875\n0.533701\n0.533701\n0.533701\n\n\n3\n2023-05-02 00:00:03.156913\n11412\n4737\n1086\n96\n33\n0\n0\n0.009536\n0.116425\n0.229902\n0.310250\n0.573414\n0.573414\n0.573414\n\n\n4\n2023-05-02 00:00:04.157472\n11597\n4747\n1077\n96\n38\n0\n0\n0.009691\n0.116800\n0.229366\n0.310305\n0.614702\n0.614702\n0.614702\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNumber of PM2.5 datapoints above the WHO recommended threshold: 88\nNumber of separate instances the threshold was crossed: 7"
  }
]